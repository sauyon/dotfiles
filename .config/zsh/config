#!/bin/zsh

# Oh My Zsh config -------------------------------------------------------------
ZSH=/usr/share/oh-my-zsh
if [[ ! -d $ZSH ]]; then
	ZSH=~/.oh-my-zsh
else
	DISABLE_AUTO_UPDATE="true"
fi

ZSH_CACHE_DIR="$XDG_CACHE_HOME/zsh"

plugins=(git github golang sudo cargo adb)

include $ZSH/oh-my-zsh.sh

# User configuration -----------------------------------------------------------

## Environment variables -------------------------------------------------------

export ANDROID_HOME=/opt/android-sdk

# make go work :D
export GOPATH=$HOME/devel/go

# PATH is path. DAMMIT OHMYZSH AGAIN GR
PATH=$PATH:/usr/local/heroku/bin:~/.gem/ruby/2.1.0/bin:$GOPATH/bin
[[ $platform == 'osx' ]] && PATH=/usr/local/bin:$PATH
PATH=$PATH:$HOME/.local/bin
PATH=$PATH:.
export PATH

# I should really check for hidpi before doing this... (but parsing is a pita)
#export GDK_SCALE=2
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# 2 space tabs are best tabs
export PAGER="$(which less) -x2"

# Emacs ftw!
if non_gui; then
	export EDITOR='emacsclient -t'
else
	export EDITOR='emacsclient'
fi

# Yes, I'm a chromium user. Deal with it.
export BROWSER="$(which chromium)"

# Environment vars for use in scripts
# I'm not actually sure this is meaningful...
export XDG_DESKTOP_DIR="$HOME/desktop"
export XDG_DOCUMENTS_DIR="$HOME/documents"
export XDG_DOWNLOAD_DIR="$HOME/downloads"
export XDG_MUSIC_DIR="$HOME/music"
export XDG_PICTURES_DIR="$HOME/images"
export XDG_PUBLICSHARE_DIR="$HOME/public"
export XDG_TEMPLATES_DIR="$HOME/.templates"
export XDG_VIDEOS_DIR="$HOME/videos"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"

# Unclutter home directory
export QUODLIBET_USERDIR="$XDG_CONFIG_HOME/quodlibet"
export LESSHISTFILE="$XDG_DATA_HOME/less/history"
export WINEPREFIX="$XDG_DATA_HOME/wineprefixes/default"
export CARGO_HOME="$XDG_DATA_HOME"/cargo
export GNUPGHOME="$XDG_CONFIG_HOME"/gnupg
export WEECHAT_HOME="$XDG_CONFIG_HOME"/weechat

#export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority

# History. Yes, it's also in zshenv.
HISTFILESIZE=1000000000
HISTSIZE=100000
SAVEHIST=$HISTSIZE
HISTFILE="$XDG_DATA_HOME/zsh/history"

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# Qt5 why u no like gtk
export QT_STYLE_OVERRIDE=gtk

## Misc preferences ------------------------------------------------------------------------

# Smart command-not-found with pkgfile
if exists pkgfile; then
  command_not_found_handler() {
    local pkgs cmd="$1"

    pkgs=(${(f)"$(pkgfile -b -v -- "$cmd" 2>/dev/null)"})
    if [[ -n "$pkgs" ]]; then
      printf '%s may be found in the following packages:\n' "$cmd"
      printf '  %s\n' $pkgs[@]
      return 127
    fi

	  printf 'zsh: command not found: %s\n' "$cmd"

    return 127
  }
fi

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=2

# Yay for syntax highlighting
include /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Autosuggestions!
include /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# Ok, fine, sometimes emacs is stupid. But at least it knows it.
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ '

# The greeting. Yeah, yeah, I'm unimaginative. :'(
echo "Hello, $(hostname)"'!'
