#!/bin/zsh

## Environment variables -------------------------------------------------------

# osx ports, sigh.
export PATH=$PATH:/opt/local/bin

# completions
compinit -u

# LD_LIBRARY_PATH?!
LD_LIBRARY_PATH=$HOME/.rustc/rust/rustc/lib:$LD_LIBRARY_PATH

# Needed for nix :(
[[ -z $LOCALE_ARCHIVE ]] && export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive

# Nix!
export NIX_PATH=nixpkgs=channel:nixpkgs-unstable:home-manager=https://github.com/rycee/home-manager/archive/master.tar.gz

# Emacs ftw!
if non_gui; then
	export EDITOR='emacsclient -t'
else
	export EDITOR='emacsclient'
fi

#export XAUTHORITY="$XDG_RUNTIME_DIR"/Xauthority

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# Qt5 why u no like gtk
export QT_STYLE_OVERRIDE=gtk

# export QT_IM_MODULE=ibus
# export XMODIFIERS=@im=ibus
# export GTK_IM_MODULE=ibus

# GTK is dumb sometimes
export GTK_OVERLAY_SCROLLING=0

export MOZ_ENABLE_WAYLAND=1

## Misc preferences ------------------------------------------------------------------------

# Smart command-not-found with pkgfile
if exists pkgfile; then
  command_not_found_handler() {
    local pkgs cmd="$1"

    pkgs=(${(f)"$(pkgfile -b -v -- "$cmd" 2>/dev/null)"})
    if [[ -n "$pkgs" ]]; then
      printf '%s may be found in the following packages:\n' "$cmd"
      printf '  %s\n' $pkgs[@]
      return 127
    fi

	  printf 'zsh: command not found: %s\n' "$cmd"

    return 127
  }
fi

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=2

# Yay for syntax highlighting
include /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Autosuggestions!
include /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh

# Ok, fine, sometimes emacs is stupid. But at least it knows it.
[[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ '

# The greeting. Yeah, yeah, I'm unimaginative. :'(
echo "Hello, $(hostname -s)"'!'

if [[ -f /tmp/checkupdates.log ]]; then
  cat /tmp/checkupdates.log
fi
